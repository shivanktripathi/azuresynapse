{
	"name": "RebuildIndex",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "LMTSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 4,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "4",
				"spark.dynamicAllocation.maxExecutors": "4",
				"spark.autotune.trackingId": "61636fa7-1616-4abb-a59d-d8af36cadee1"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_sparkdotnet",
				"display_name": "csharp"
			},
			"language_info": {
				"name": "csharp"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/a2d99d65-e76e-4ea1-90fa-63c34843c7a0/resourceGroups/RG-LMT-CORE-DEV/providers/Microsoft.Synapse/workspaces/labormangementsynapsedev/bigDataPools/LMTSparkPool",
				"name": "LMTSparkPool",
				"type": "Spark",
				"endpoint": "https://labormangementsynapsedev.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/LMTSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"#r \"nuget: Microsoft.Azure.Search, 10.1.0\""
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"using Microsoft.Azure.Search;\r\n",
					"using Microsoft.Azure.Search.Models;\r\n",
					"using System;\r\n",
					"using System.Collections.Generic;\r\n",
					"using System.Linq;\r\n",
					"using Microsoft.Spark.Extensions.Azure.Synapse.Analytics.Utils;\r\n",
					"\r\n",
					"public static string searchServiceName = TokenLibrary.getSecret(\"LMT-KV-DEV-EASTUS\",\"LaborRejectionRecommendation-SearchServiceName\", \"LMT_KeyVault_Dev\");\r\n",
					"public static string searchIndex = TokenLibrary.getSecret(\"LMT-KV-DEV-EASTUS\",\"LaborRejectionRecommendation-SearchIndex\", \"LMT_KeyVault_Dev\");\r\n",
					"public static string KeyCol = TokenLibrary.getSecret(\"LMT-KV-DEV-EASTUS\",\"LaborRejectionRecommendation-SearchKeyColumn\", \"LMT_KeyVault_Dev\");\r\n",
					"public static string apiKey =TokenLibrary.getSecret(\"LMT-KV-DEV-EASTUS\",\"LaborRejectionRecommendation-SearchApiKey\", \"LMT_KeyVault_Dev\");\r\n",
					"\r\n",
					"while (true)\r\n",
					"{\r\n",
					"    SearchIndexClient indexClient = new SearchIndexClient(searchServiceName, searchIndex, new SearchCredentials(apiKey));\r\n",
					"    DocumentSearchResult<Document> searchResult = indexClient.Documents.Search<Document>(string.Empty);\r\n",
					"    List<string> azureDocsToDelete =\r\n",
					"    searchResult\r\n",
					"        .Results\r\n",
					"        .Select(r => r.Document[KeyCol].ToString())\r\n",
					"        .ToList();\r\n",
					"    if (azureDocsToDelete.Count != 0)\r\n",
					"    {\r\n",
					"        try\r\n",
					"        {\r\n",
					"            var result = indexClient.Documents.Index(IndexBatch.Delete(KeyCol, azureDocsToDelete));\r\n",
					"        }\r\n",
					"        catch (IndexBatchException ex)\r\n",
					"        {\r\n",
					"            throw new Exception($\"Failed to reset the index: {string.Join(\", \", ex.IndexingResults.Where(r => !r.Succeeded).Select(r => r.Key))}\");\r\n",
					"        }\r\n",
					"    }\r\n",
					"    else\r\n",
					"    {\r\n",
					"        break;\r\n",
					"    }\r\n",
					"    \r\n",
					"}\r\n",
					"\r\n",
					"var serviceClient = new SearchServiceClient(searchServiceName, new SearchCredentials(apiKey));\r\n",
					"serviceClient.Indexers.Run(\"idxr-rejectionrecommendation\");            "
				],
				"execution_count": null
			}
		]
	}
}